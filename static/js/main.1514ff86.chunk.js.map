{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["TodoList","todos","handleShowButton","selectedTodo","isModalVisible","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","query","handleSearch","handleFilter","onChange","event","target","value","placeholder","style","pointerEvents","length","Loader","TodoModal","user","isVisible","isFetching","setIsModalVisible","href","email","name","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","App","useState","setTodos","isTodosFetching","setIsTodosFetching","setSelectedTodo","setUser","isUserFetching","setIsUserFetching","searchQuery","setSearchQuery","filter","setFilter","visibleTodos","lowerCasedQuery","toLowerCase","trim","includes","handleGetUser","a","userId","selectedUser","handleGetTodos","todosList","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1514ff86.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  handleShowButton: (todo: Todo) => void;\n  selectedTodo: Todo | null;\n  isModalVisible: boolean;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  handleShowButton,\n  selectedTodo,\n  isModalVisible,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr data-cy=\"todo\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleShowButton(todo)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={classNames('far', {\n                      'fa-eye': !isModalVisible\n                        || todo.id !== selectedTodo?.id,\n                      'fa-eye-slash': isModalVisible\n                        && todo.id === selectedTodo?.id,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  query: string;\n  handleSearch: (value: string) => void;\n  handleFilter: (value: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  handleSearch,\n  handleFilter,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => handleFilter(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => handleSearch(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          {query.length > 0 && (\n            <button\n              data-cy=\"clearSearchButton\"\n              aria-label=\"resetSearch\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => handleSearch('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo | null;\n  user: User | null;\n  isVisible: boolean;\n  isFetching: boolean;\n  setIsModalVisible: (isVisibe: boolean) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  user,\n  isVisible,\n  isFetching,\n  setIsModalVisible,\n}) => {\n  return (\n    <div\n      className={classNames('modal', {\n        'is-active': isVisible,\n      })}\n      data-cy=\"modal\"\n    >\n      <div className=\"modal-background\" />\n\n      {isFetching ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setIsModalVisible(false)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto: ${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId?: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos, getUser } from './api';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isTodosFetching, setIsTodosFetching] = useState(true);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [user, setUser] = useState<User | null>(null);\n  const [isUserFetching, setIsUserFetching] = useState(false);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filter, setFilter] = useState('all');\n\n  const searchTodo = (todo: Todo) => {\n    const lowerCasedQuery = searchQuery.toLowerCase().trim();\n    const lowerCasedTitle = todo.title.toLowerCase();\n\n    return lowerCasedTitle.includes(lowerCasedQuery);\n  };\n\n  const visibleTodos = todos\n    .filter(searchTodo)\n    .filter(todo => {\n      switch (filter) {\n        case 'completed':\n          return todo.completed;\n\n        case 'active':\n          return !todo.completed;\n\n        default:\n          return true;\n      }\n    });\n\n  const handleGetUser = async (todo: Todo) => {\n    setIsUserFetching(true);\n    const selectedUser = await getUser(todo.userId);\n\n    setUser(selectedUser);\n    setIsUserFetching(false);\n  };\n\n  const handleShowButton = (todo: Todo) => {\n    setSelectedTodo(todo);\n    handleGetUser(todo);\n    setIsModalVisible(true);\n  };\n\n  const handleGetTodos = async () => {\n    const todosList = await getTodos();\n\n    setTodos(todosList);\n    setIsTodosFetching(false);\n  };\n\n  useEffect(() => {\n    handleGetTodos();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={searchQuery}\n                handleSearch={setSearchQuery}\n                handleFilter={setFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isTodosFetching\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    handleShowButton={handleShowButton}\n                    selectedTodo={selectedTodo}\n                    isModalVisible={isModalVisible}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {isModalVisible && (\n        <TodoModal\n          todo={selectedTodo}\n          user={user}\n          isVisible={isModalVisible}\n          isFetching={isUserFetching}\n          setIsModalVisible={setIsModalVisible}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}